{"version":3,"file":"index.spec.js","mappings":";;;;;;;;;;;;;AAAA;;GAEG;AACH,MAAa,SAAS;;AAAtB,8BAYC;AAXC;;;;;;;;GAQG;AACW,kBAAQ,GAClB,CAAC,IAAY,EAAE,IAAY,EAAU,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;AAG1D,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAC;;;;;;;UCjBtD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;;;ACrBA,qEAAoC;AAEpC,QAAQ,CAAC,WAAW,EAAE,GAAS,EAAE;IAE/B,QAAQ,CAAC,YAAY,EAAE,GAAS,EAAE;QAEhC,EAAE,CAAC,yBAAyB,EAAE,GAAS,EAAE;YACvC,MAAM,CAAC,iBAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","sources":["webpack://myLib/./src/index.ts","webpack://myLib/webpack/bootstrap","webpack://myLib/./src/index.spec.ts"],"sourcesContent":["/**\r\n * Sample TypeDoc comment for class MyProject\r\n */\r\nexport class MyProject {\r\n  /**\r\n   * Sample TypeDoc comment for my method.\r\n   * Types for Params and Returns will be auto-generated\r\n   *\r\n   * @param arg1 Some string that goes into this method.\r\n   * @param arg2 Some number that goes into this method.\r\n   * @returns The number concatenated to the string.\r\n   *\r\n   */\r\n  public static myMethod: (arg1: string, arg2: number) => string\r\n    = (arg1: string, arg2: number): string => arg1 + arg2;\r\n}\r\n\r\nconsole.log(MyProject.myMethod('The number is: ', 5));\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\r\nimport { MyProject } from './index';\r\n\r\ndescribe('MyProject', (): void => {\r\n\r\n  describe('myMethod()', (): void => {\r\n\r\n    it('should return \"Hello 5\"', (): void => {\r\n      expect(MyProject.myMethod('Hello ', 5)).toEqual('Hello 5');\r\n    });\r\n\r\n  });\r\n\r\n});\r\n"],"names":[],"sourceRoot":""}