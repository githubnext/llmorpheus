{"version":3,"file":"index.min.js","sources":["../src/build-country.js","../src/build-timezone.js","../src/index.js"],"sourcesContent":["let timezonesMap;\n\nexport default function buildCountry(data, id) {\n  const name = data.countries[id];\n  if (!name) return null;\n\n  const tzMap = getTimezonesMap(data)[id] || {};\n\n  return {\n    id,\n    name,\n    timezones: tzMap.current || [],\n    allTimezones: tzMap.all || [],\n  };\n}\n\nfunction getTimezonesMap(data) {\n  if (!timezonesMap) timezonesMap = buildTimezonesMap(data);\n  return timezonesMap;\n}\n\nfunction buildTimezonesMap(data) {\n  return Object.keys(data.timezones).reduce((result, id) => {\n    const tz = data.timezones[id];\n    const { c, a } = tz;\n    const aliasTz = data.timezones[a] || {};\n    const countries = c || aliasTz.c;\n\n    if (!countries) return result;\n\n    countries.forEach((country) => {\n      if (!result[country]) Object.assign(result, { [country]: { current: [], all: [] } });\n      if (tz.r === undefined) result[country].current.push(id);\n      result[country].all.push(id);\n    });\n\n    return result;\n  }, {});\n}\n","export default function buildTimezone(data, name) {\n  const timezone = data.timezones[name];\n  if (!timezone) return null;\n\n  const { a: aliasOf = null } = timezone;\n  const aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n  const tz = {\n    ...aliasTz,\n    ...data.timezones[name],\n  };\n\n  const countries = tz.c || [];\n  const utcOffset = tz.u;\n  const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n\n  const result = {\n    name,\n    countries,\n    utcOffset,\n    utcOffsetStr: getOffsetStr(utcOffset),\n    dstOffset,\n    dstOffsetStr: getOffsetStr(dstOffset),\n    aliasOf,\n  };\n  if (timezone.r) result.deprecated = true;\n  return result;\n}\n\nfunction getOffsetStr(offset) {\n  const hours = Math.floor(offset / 60);\n  const min = offset % 60;\n  const sign = offset < 0 ? '-' : '+';\n\n  return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;\n}\n\nfunction getNumStr(input) {\n  const num = Math.abs(input);\n  const prefix = num < 10 ? '0' : '';\n  return `${prefix}${num}`;\n}\n","import data from './data.json';\nimport buildCountry from './build-country';\nimport buildTimezone from './build-timezone';\n\nconst totalTimezones = Object.keys(data.timezones).length;\nconst countries = {};\nconst timezones = {};\nlet memoizedTimezones = 0;\n\nexport function getAllCountries(options = {}) {\n  return Object.keys(data.countries).reduce((prev, id) => {\n    return Object.assign(prev, { [id]: getCountry(id, options) });\n  }, {});\n}\n\nexport function getAllTimezones(options = {}) {\n  if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);\n  return deliverTimezones(timezones, options);\n}\n\nexport function getCountry(id, options = {}) {\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  return deliverCountry(countries[id], options);\n}\n\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n}\n\nexport function getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? { ...timezones[name] } : null;\n}\n\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\n\nexport function getCountriesForTimezone(tzName, options = {}) {\n  const timezone = getTimezone(tzName) || {};\n  const values = timezone.countries || [];\n  return values.map((c) => getCountry(c, options));\n}\n\nexport function getCountryForTimezone(tzName, options = {}) {\n  const [main] = getCountriesForTimezone(tzName, options);\n  return main || null;\n}\n\nexport function getTimezonesForCountry(countryId, options = {}) {\n  const country = getCountry(countryId, options);\n  if (!country) return null;\n  const values = country.timezones || [];\n  return values.map(getTimezone);\n}\n\nfunction deliverTimezones(tzs, options) {\n  const { deprecated } = options || {};\n  if (deprecated === true) return tzs;\n  return Object.keys(tzs).reduce((prev, key) => {\n    if (!tzs[key].deprecated) Object.assign(prev, { [key]: tzs[key] });\n    return prev;\n  }, {});\n}\n\nfunction deliverCountry(country, options) {\n  if (!country) return null;\n  const { deprecated } = options || {};\n  const { allTimezones, ...other } = country;\n  const tz = deprecated ? country.allTimezones : country.timezones;\n  return { ...other, timezones: tz };\n}\n\nexport default {\n  getCountry,\n  getTimezone,\n  getAllCountries,\n  getAllTimezones,\n  getTimezonesForCountry,\n  getCountriesForTimezone,\n  getCountryForTimezone,\n};\n"],"names":["timezonesMap","buildCountry","data","id","name","countries","tzMap","Object","keys","timezones","reduce","result","tz","c","a","aliasTz","forEach","country","assign","current","all","undefined","r","push","buildTimezonesMap","getTimezonesMap","allTimezones","getOffsetStr","offset","hours","Math","floor","min","getNumStr","input","num","abs","totalTimezones","length","memoizedTimezones","getAllCountries","options","prev","getCountry","getAllTimezones","getTimezone","deliverTimezones","memoizeCountry","deliverCountry","timezone","memoizeTimezone","aliasOf","utcOffset","u","dstOffset","Number","isInteger","d","utcOffsetStr","dstOffsetStr","deprecated","buildTimezone","getCountriesForTimezone","tzName","values","map","getCountryForTimezone","main","getTimezonesForCountry","countryId","tzs","key","other"],"mappings":"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"}