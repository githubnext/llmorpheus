{"id":6,"fileName":"src/build-timezone.js","chunkNr":0,"rule":{"ruleId":"5","rule":"return <Expr>; -> return !<Expr>;","description":"negate return expression"},"text":"In this task, we will change the behavior of a program by applying mutation testing.\nGiven the following code, where line numbers have been added for ease of reference:\n<BEGIN>\n 1: export default function buildTimezone(data, name) {\n 2:   const timezone = data.timezones[name];\n 3:   if (!timezone) return null;\n 4: \n 5:   const { a: aliasOf = null } = timezone;\n 6:   const aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n 7:   const tz = {\n 8:     ...aliasTz,\n 9:     ...data.timezones[name],\n10:   };\n11: \n12:   const countries = tz.c || [];\n13:   const utcOffset = tz.u;\n14:   const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n15: \n16:   const result = {\n17:     name,\n18:     countries,\n19:     utcOffset,\n20:     utcOffsetStr: getOffsetStr(utcOffset),\n<END>\n\nIdentify where the following rewrite rule is applicable:\n\t\treturn <Expr>; -> return !<Expr>; (negate return expression)\nGoing through EACH of the lines in the code in order, please respond EITHER:\nThe rewriting rule is not applicable to LINE #N\nOR respond by providing: \n\t  (i) the line number of the code that matched the rewriting rule, \n\t  (ii) a Markdown code block with the original code on that line, and\n\t  (iii) a Markdown code block with the rewritten code replacing the original code\nusing the following template:  \nCHANGE LINE #N FROM:\n```\n<original code>\n```\nTO:\n```\n<rewritten code>\n```\nPlease assume that each change is made in isolation and apply the rule\non every line where it is applicable.\n\nAfter responding to all of the lines in the code, please conclude your response with \"DONE\". \n"}