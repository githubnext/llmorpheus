[
  {
    "rule": {
      "ruleId": "2",
      "rule": "<Expr> === <Expr> -> <Expr> !== <Expr>",
      "description": "replace === operator in condition with !=="
    },
    "originalCode": "if (tz.r === undefined) result[country].current.push(id);",
    "rewrittenCode": "if (tz.r !== undefined) result[country].current.push(id);",
    "fileName": "experiments/origFile.txt",
    "lineApplied": 33,
    "comment": ""
  },
  {
    "rule": {
      "ruleId": "4",
      "rule": "<Expr> || {} -> <Expr>",
      "description": "replace binary || expression with its first operand if the second operand is an empty object literal"
    },
    "originalCode": "const tzMap = getTimezonesMap(data)[id] || {};",
    "rewrittenCode": "const tzMap = getTimezonesMap(data)[id];",
    "fileName": "experiments/origFile.txt",
    "lineApplied": 7,
    "comment": ""
  },
  {
    "rule": {
      "ruleId": "4",
      "rule": "<Expr> || {} -> <Expr>",
      "description": "replace binary || expression with its first operand if the second operand is an empty object literal"
    },
    "originalCode": "const aliasTz = data.timezones[a] || {};",
    "rewrittenCode": "const aliasTz = data.timezones[a];",
    "fileName": "experiments/origFile.txt",
    "lineApplied": 26,
    "comment": ""
  },
  {
    "rule": {
      "ruleId": "5",
      "rule": "return <Expr>; -> return !<Expr>;",
      "description": "negate return expression"
    },
    "originalCode": "return timezonesMap;",
    "rewrittenCode": "return !timezonesMap;",
    "fileName": "experiments/origFile.txt",
    "lineApplied": 19,
    "comment": ""
  },
  {
    "rule": {
      "ruleId": "5",
      "rule": "return <Expr>; -> return !<Expr>;",
      "description": "negate return expression"
    },
    "originalCode": "return result;",
    "rewrittenCode": "return !result;",
    "fileName": "experiments/origFile.txt",
    "lineApplied": 29,
    "comment": "location adjusted: model reported code on line 28, but found on line 29"
  },
  {
    "rule": {
      "ruleId": "5",
      "rule": "return <Expr>; -> return !<Expr>;",
      "description": "negate return expression"
    },
    "originalCode": "return result;",
    "rewrittenCode": "return !result;",
    "fileName": "experiments/origFile.txt",
    "lineApplied": 37,
    "comment": ""
  }
]