name: Mutation Testing Experiment

on:
  workflow_dispatch:
    inputs:
      packages:
        description: "JSON file that specifies packages to generate mutants for"
        default: "benchmarks.json"
      temperatures:
        description: "Sampling temperatures to try when obtaining completions (whitespace-separated)"
        default: "0.0"
      maxNrPrompts:
        description: "Maximum number of prompts to try when obtaining completions"
        default: "1250"
      # model:
      #   description: "Which LLM API to use"
      #   type: "choice"
      #   options:
      #     - "gpt3.5-turbo"
      #     - "gpt4"
      #     - "text-davinci003"
      #   default: "gpt4"
      debug_enabled:
        type: boolean
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        default: false

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      packages: "${{ steps.parse_packages.outputs.packages }}"
      temperatures: "${{ github.event.inputs.temperatures || '0.0' }}"
      maxNrPrompts: "${{ github.event.inputs.maxNrPrompts || '1250' }}"
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - id: parse_packages
        run: |
          packages=$(node \
                     .github/find_benchmarks.js " \
                     .github/${{ github.event.inputs.packages || 'benchmarks.json' }}")
          packages=$(echo $packages | tr '\n' ' ')
          echo "packages=$packages" >> $GITHUB_OUTPUT

  benchmark:
    needs:
      - setup
    runs-on: ubuntu-latest

    # steps:
    #   - name : print needs
    #     run: |
    #       echo "packages=${{ fromJson(needs.setup.outputs.packages) }}"
          
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.setup.outputs.packages) }}
    steps:
      - name: checkout master branch of StrykerJS from https://github.com/franktip/stryker-js into directory stryker-js
        uses: actions/checkout@v3
        with:
          repository: franktip/stryker-js
          ref: master
          path: stryker-js

      - name: build StrykerJS
        run: |
          cd stryker-js
          npm install
          npm run build
      - name: print package info
        run: |
          echo "package.host=${{ matrix.package.host }}" 
          echo "package.name=${{ matrix.package.name }}"
          echo "package.owner=${{ matrix.package.owner }}"
          echo "package.repo=${{ matrix.package.repo }}"
          echo "package.sha=${{ matrix.package.sha }}"
          echo "package.edits=${{ matrix.package.edits }}"
          echo "package.files=${{ matrix.package.files }}"
          echo "package.ignore=${{ matrix.package.ignore }}"

      - name: check out benchmark
        if: ${{ matrix.package.host == 'github.com' }}
        uses: actions/checkout@v3
        with:
          repository: ${{ format('{0}/{1}', matrix.package.owner, matrix.package.repo) }}
          ref: ${{ matrix.package.sha }}
          path: ${{ matrix.package.name }}

      - name: Checkout gitlab package repo
        if: ${{ matrix.package.host == 'gitlab.com' }}
        run: |
          git clone ${{ format('https://gitlab.com/{0}/{1}', matrix.package.owner, matrix.package.repo) }} ${{ matrix.package.name }}
          cd ${{ matrix.package.name }}
          git checkout ${{ matrix.package.sha }}

      - name: build project
        run: |
          cd ${{ matrix.package.name }}
          # if an edit command for editing package.json is specified (e.g., to disable linting), run it
          if [ -n "$MATRIX_PACKAGE_EDITS" ]; then
            ${{ matrix.package.edits }}
          fi
          npm install
          # if a build script exists, run it
          npm run build || echo "No build script found"
        env:
          MATRIX_PACKAGE_EDITS: ${{ matrix.package.edits }}

      - name: Check out llm-mutation-testing
        uses: actions/checkout@v3
        with:
          path: llm-mutation-testing 

      - name: Set up llm-mutation-testing
        run: |
          cd llm-mutation-testing
          npm run build

      - name: Generate mutants
        env:
          PERPLEXITY_AI_API_ENDPOINT: '${{ secrets.PERPLEXITY_AI_API_ENDPOINT }}'
          PERPLEXITY_AI_AUTH_HEADERS: '${{ secrets.PERPLEXITY_AI_AUTH_HEADERS }}'
        run: |
          cd ${{ matrix.package.name }}
          BENCHMARK_DIR=`pwd`
          cd ../llm-mutation-testing
          echo "Generating mutants for ${{ matrix.package.name }}"           
          node --max-old-space-size=6144 benchmark/createMutants.js --path $BENCHMARK_DIR --mutate "${{ matrix.package.files }}" --ignore "${{ matrix.package.ignore }}"  --model codellama-34b-instruct  --promptTemplateFileName templates/template1.hb  --caching false  --temperature 0.0 --rateLimit 10000 --maxNrPrompts ${{ needs.setup.outputs.maxNrPrompts }} 

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}     

      - name: Zip up and upload mutants info
        run: |
          cd ${{ matrix.package.name }}
          mkdir mutants
          cp -r MUTATION_TESTING/*/* mutants
          zip -r mutants-${{ matrix.package.name }}.zip mutants
      
      - name: Upload mutants info
        uses: actions/upload-artifact@v2
        with:
          name: mutants
          path: ${{ matrix.package.name }}/mutants-${{ matrix.package.name }}.zip

      

      - name: install stryker-js into benchmark and run stryker (precomputed mutators)
        run: |
          cd ${{ matrix.package.name }}
          npm install install-local # install-local is needed to install our custom version of stryker-js  
          npx install-local ../stryker-js/packages/{core,util,api,instrumenter,*-runner}  --legacy-peer-deps
          export MUTANTS_FILE=MUTATION_TESTING/template1_codellama-34b-instruct_0/mutants.json
          STRYKER_FILES=$(node ../llm-mutation-testing/.github/expandGlob.js $(pwd) "${{ matrix.package.files }}" "${{ matrix.package.ignore }}")
          npx stryker run --usePrecomputed --mutate $STRYKER_FILES
